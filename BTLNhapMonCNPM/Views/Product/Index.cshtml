
@{
    ViewData["Title"] = "Danh sách sản phẩm";
}
@model Dictionary<string,object>
<h1 class="text-lg text-primary">Danh sách sản phẩm</h1>
@{
    List<TblLoaiSanPham> danhMucSanPham = (List<TblLoaiSanPham>)Model["danhmuc"];

    List<TblSanPham> ProductType = (List<TblSanPham>)Model["dsSP"];

    List<TblSanPham> ProductPagination = (List<TblSanPham>)Model["dsSP"];

    List<TblSanPham> AllProduct = (List<TblSanPham>)Model["dsSP"];

    @if ((long)Model["danhmucid"] != 0)
    {
        long id = (long)Model["danhmucid"];
        ProductType = AllProduct.Where(p => p.IMaLoaiSp == id).ToList();
        ProductPagination = ProductType;
    }
    @if((int)Model["pagination"] != 0)
    {
        if (ProductType.Count < 3)
        {
            ProductPagination = ProductType;
        }
        else ProductPagination = ProductType.Slice((int)Model["pagination"] * 3 - 3, 3);
    }
    else
    {
        if (ProductType.Count >= 3) ProductPagination = ProductType.Slice(0, 3);
        else ProductPagination = ProductType;
    }
}

<div class="container mt-4">
    <div class="row">
        <!-- DANH MỤC SẢN PHẨM -->
        <div class="col-md-3">
            <h5 class="text-primary">Danh mục sản phẩm</h5>
            <div class="list-group">
                <a href="/product" class="list-group-item list-group-item-action @((long)Model["danhmucid"] == 0 ? "active" : "")">
                    Tất cả sản phẩm
                </a>
                @foreach (var danhMuc in danhMucSanPham)
                {
                    <a href="/product/@danhMuc.IMaLoaiSp" class="list-group-item list-group-item-action @((long)Model["danhmucid"] == danhMuc.IMaLoaiSp ? "active" : "")">
                        @danhMuc.STenLoai
                    </a>
                }
            </div>
        </div>

        <!-- DANH SÁCH SẢN PHẨM -->
        <div class="col-md-9">
            <h5 class="text-success">Sản phẩm</h5>
            <div class="row">
                @if (ProductPagination.Any())
                {
                    @foreach (var sp in ProductPagination)
                    {
                        <div class="col-md-4 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <img src="@Url.Content(sp.SImageThuoc)" style="height : 200px; object-fit:cover" class="w-100" />
                                    <h6 class="card-title">@sp.STen</h6>
                                    <p class="card-text">Giá: <strong>@sp.FGiaBan.ToString("#,## VND")</strong></p>
                                    <p class="card-text"><small class="text-muted">@sp.SDonViTinh</small></p>
                                    <a href="#" class="btn btn-primary btn-sm">Chi tiết</a>
                                    <button class="btn btn-primary add-to-cart btn-sm" data-id="@sp.IMaSp" data-name="@sp.STen" data-price="@sp.FGiaBan">
                                        Thêm vào giỏ hàng
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">Không có sản phẩm nào.</p>
                }
            </div>
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item"><a class="page-link" href="#">Previous</a></li>
                    @{

                        int numberpage = ProductType.Count / 3;
                        if(numberpage == 0)
                        {
                            numberpage = 1;
                        }
                        
                    }
                    @for (int i = 1; i <= numberpage; i++)
                    {
                        // nếu là 0 thì active thằng 1 nếu không phải 0 thì active thằng được click
                        <li class="page-item @((int)Model["pagination"] == i ? "active" : (int)Model["pagination"] == 0 && i==1 ? "active" : "" )"><a class="page-link" href="@Context.Request.Path?pagination=@i">@i</a></li>
                    }
                    <li class="page-item"><a class="page-link" href="#">Next</a></li>
                </ul>
            </nav>
        </div>
        
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        updateCartCount();

        // Xử lý sự kiện click "Thêm vào giỏ hàng"
        document.querySelectorAll(".add-to-cart").forEach(button => {
            button.addEventListener("click", function () {
                let productId = this.getAttribute("data-id");
                let productName = this.getAttribute("data-name");
                let productPrice = this.getAttribute("data-price");

                let cart = JSON.parse(localStorage.getItem("cart")) || [];

                // Kiểm tra sản phẩm đã tồn tại chưa
                let existingProduct = cart.find(p => p.id == productId);
                if (existingProduct) {
                    existingProduct.quantity += 1;
                } else {
                    cart.push({ id: productId, name: productName, price: productPrice, quantity: 1 });
                }

                localStorage.setItem("cart", JSON.stringify(cart));
                updateCartCount();
            });
        });

        // Cập nhật số lượng giỏ hàng
        function updateCartCount() {
            let cart = JSON.parse(localStorage.getItem("cart")) || [];
            let totalQuantity = cart.reduce((sum, item) => sum + item.quantity, 0);
            document.getElementById("cartCount").textContent = totalQuantity;
        }
    });
</script>


